
CommonController.java (20 matches)
	178: model.addAttribute("mainMenuHtml", menuHtml);  
	189: model.addAttribute("publicKeyModulus", rsa.getPublicKeyModulus());  
	190: model.addAttribute("publicKeyExponent", rsa.getPublicKeyExponent());  
	210: model.addAttribute("flag", "success");  
	211: model.addAttribute("msg", "");  
	213: model.addAttribute("flag", "fail");  
	214: model.addAttribute("msg", "Failed");  
	218: model.addAttribute("flag", "fail");  
	219: model.addAttribute("msg", "System error. Please retry!");  
	238: model.addAttribute("result", String.valueOf(result));  
	239: model.addAttribute("actionUrl", paramMap.get("actionUrl"));  
	257: model.addAttribute("downloadInfoMap", downloadInfoMap);  
	358: model.addAttribute("keyList", map.get("keyList"));  
	359: model.addAttribute("colNameList", map.get("colNameList"));  
	360: model.addAttribute("paramMap", paramMap);  
	361: model.addAttribute("list", list);  
	466: model.addAttribute("flag", "pass");  
	467: model.addAttribute("msg", "");  
	469: model.addAttribute("flag", "fail");  
	470: model.addAttribute("msg", "Your country is serviced by Gulliver.<br><a href='http://www.gullivernet.com/en'>Click this link. http://www.gullivernet.com/en</a>");  

ErrorController.java (12 matches)
	24: model.addAttribute("msg", "Your request could not be processed.");  
	32: model.addAttribute("msg", "Your request could not be processed.");  
	40: model.addAttribute("msg", "Your request could not be processed.");  
	48: model.addAttribute("msg", "Your request could not be processed.");  
	56: model.addAttribute("status", httpStatus);  
	57: model.addAttribute("msg", "Your request could not be processed.");  
	65: model.addAttribute("status", httpStatus);  
	66: model.addAttribute("msg", "The network or server seems to have failed. Please try again in a few minutes.");  
	74: model.addAttribute("msg", "The network or server seems to have failed. Please try again in a few minutes.");  
	82: model.addAttribute("msg", "The network or server seems to have failed. Please try again in a few minutes.");  
	90: model.addAttribute("msg", "An exception occurred.");  
	98: model.addAttribute("msg", "An exception occurred.");  

InitUtil.java (4 matches)
	37: model.addAttribute("mainMenuHtml", CommonUtils.getMenuHtml(menuList, userType, groupCode));  
	38: model.addAttribute("msg", CommonUtils.setRedirectMsg(paramMap));  
	50: model.addAttribute("mainMenuHtml", CommonUtils.getMenuHtml(menuList, userType, groupCode));  
	51: model.addAttribute("msg", CommonUtils.setRedirectMsg(paramMap));  

AppsController.java (69 matches)
	53: model.addAttribute("inventoryList", map.get("inventoryList"));  
	54: model.addAttribute("inventoryDef", map.get("inventoryDef"));  
	55: model.addAttribute("pageInfo", map.get("pageInfo"));  
	71: model.addAttribute("hisInventoryList", map.get("hisInventoryList"));  
	72: model.addAttribute("hisInventoryDef", map.get("hisInventoryDef"));  
	73: model.addAttribute("pageInfo", map.get("pageInfo"));  
	89: model.addAttribute("stockInList", map.get("stockInList"));  
	90: model.addAttribute("stockInDef", map.get("stockInDef"));  
	91: model.addAttribute("pageInfo", map.get("pageInfo"));  
	107: model.addAttribute("stockOutList", map.get("stockOutList"));  
	108: model.addAttribute("stockOutDef", map.get("stockOutDef"));  
	109: model.addAttribute("pageInfo", map.get("pageInfo"));  
	125: model.addAttribute("stockCheckList", map.get("stockCheckList"));  
	126: model.addAttribute("stockCheckDef", map.get("stockCheckDef"));  
	127: model.addAttribute("pageInfo", map.get("pageInfo"));  
	143: model.addAttribute("purchaseList", map.get("purchaseList"));  
	144: model.addAttribute("purchaseDef", map.get("purchaseDef"));  
	145: model.addAttribute("pageInfo", map.get("pageInfo"));  
	161: model.addAttribute("retailList", map.get("retailList"));  
	162: model.addAttribute("retailDef", map.get("retailDef"));  
	163: model.addAttribute("pageInfo", map.get("pageInfo"));  
	179: model.addAttribute("trackingList", map.get("trackingList"));  
	180: model.addAttribute("trackingDef", map.get("trackingDef"));  
	181: model.addAttribute("pageInfo", map.get("pageInfo"));  
	197: model.addAttribute("customerList", map.get("customerList"));  
	198: model.addAttribute("customerDef", map.get("customerDef"));  
	199: model.addAttribute("pageInfo", map.get("pageInfo"));  
	215: model.addAttribute("rentalList", map.get("rentalList"));  
	216: model.addAttribute("rentalDef", map.get("rentalDef"));  
	217: model.addAttribute("pageInfo", map.get("pageInfo"));  
	233: model.addAttribute("customerList", map.get("customerList"));  
	234: model.addAttribute("customerDef", map.get("customerDef"));  
	235: model.addAttribute("pageInfo", map.get("pageInfo"));  
	271: model.addAttribute("options", commonService.getOptionString("", optionList));  
	287: model.addAttribute("ticketValidationList", map.get("ticketValidationList"));  
	288: model.addAttribute("ticketValidationDef", map.get("ticketValidationDef"));  
	289: model.addAttribute("pageInfo", map.get("pageInfo"));  
	305: model.addAttribute("soldTicketsList", map.get("soldTicketsList"));  
	306: model.addAttribute("soldTicketsDef", map.get("soldTicketsDef"));  
	307: model.addAttribute("pageInfo", map.get("pageInfo"));  
	323: model.addAttribute("projectsList", map.get("projectsList"));  
	324: model.addAttribute("projectsDef", map.get("projectsDef"));  
	325: model.addAttribute("pageInfo", map.get("pageInfo"));  
	341: model.addAttribute("locationsList", map.get("locationsList"));  
	342: model.addAttribute("locationsDef", map.get("locationsDef"));  
	343: model.addAttribute("pageInfo", map.get("pageInfo"));  
	359: model.addAttribute("timeList", map.get("timeList"));  
	360: model.addAttribute("timeDef", map.get("timeDef"));  
	361: model.addAttribute("pageInfo", map.get("pageInfo"));  
	375: model.addAttribute("projectList", list);  
	391: model.addAttribute("fieldServiceList", map.get("fieldServiceList"));  
	392: model.addAttribute("fieldServiceDef", map.get("fieldServiceDef"));  
	393: model.addAttribute("pageInfo", map.get("pageInfo"));  
	410: model.addAttribute("productList", map.get("productList"));  
	411: model.addAttribute("productDef", map.get("productDef"));  
	412: model.addAttribute("pageInfo", map.get("pageInfo"));  
	429: model.addAttribute("addressList", map.get("addressList"));  
	430: model.addAttribute("addressDef", map.get("addressDef"));  
	431: model.addAttribute("pageInfo", map.get("pageInfo"));  
	452: model.addAttribute("result", "OK");  
	471: model.addAttribute("eFlag", "END");  
	486: model.addAttribute("categoryList", map.get("categoryList"));  
	487: //model.addAttribute("categoryDef", map.get("categoryDef"));  
	488: model.addAttribute("pageInfo", map.get("pageInfo"));  
	504: model.addAttribute("deliveryList", map.get("deliveryList"));  
	505: model.addAttribute("deliveryDef", map.get("deliveryDef"));  
	506: model.addAttribute("pageInfo", map.get("pageInfo"));  
	517: model.addAttribute("customerInfo", appsService.getCustomerInfo(paramMap));  
	528: model.addAttribute("addrInfo", appsService.getAddressInfo(paramMap));
	  
MdcKoamtacController.java
	28: model.addAttribute("syncUserMap", mdcKoamtacService.getSyncUser(paramMap));  
	WSApiController.java (48 matches)
	41: model.addAttribute("result", map.get("result"));  
	42: model.addAttribute("msg", map.get("msg"));  
	44: model.addAttribute("result", "fail");  
	45: model.addAttribute("msg", "Authentication failed.");  
	63: model.addAttribute("result", map.get("result"));  
	64: model.addAttribute("msg", map.get("msg"));  
	66: model.addAttribute("result", "fail");  
	67: model.addAttribute("msg", "Authentication failed.");  
	84: model.addAttribute("result", map.get("result"));  
	85: model.addAttribute("msg", map.get("msg"));  
	87: model.addAttribute("result", "fail");  
	88: model.addAttribute("msg", "Authentication failed.");  
	105: model.addAttribute("result", map.get("result"));  
	106: model.addAttribute("msg", map.get("msg"));  
	108: model.addAttribute("result", "fail");  
	109: model.addAttribute("msg", "Authentication failed.");  
	126: model.addAttribute("result", map.get("result"));  
	127: model.addAttribute("msg", map.get("msg"));  
	129: model.addAttribute("result", "fail");  
	130: model.addAttribute("msg", "Authentication failed.");  
	147: model.addAttribute("result", map.get("result"));  
	148: model.addAttribute("msg", map.get("msg"));  
	150: model.addAttribute("result", "fail");  
	151: model.addAttribute("msg", "Authentication failed.");  
	168: model.addAttribute("result", map.get("result"));  
	169: model.addAttribute("msg", map.get("msg"));  
	171: model.addAttribute("result", "fail");  
	172: model.addAttribute("msg", "Authentication failed.");  
	189: model.addAttribute("result", map.get("result"));  
	190: model.addAttribute("msg", map.get("msg"));  
	192: model.addAttribute("result", "fail");  
	193: model.addAttribute("msg", "Authentication failed.");  
	206: model.addAttribute("result", "success");  
	207: model.addAttribute("msg", "File upload successful");  
	209: model.addAttribute("result", "fail");  
	210: model.addAttribute("msg", "File upload failed");  
	227: model.addAttribute("result", map.get("result"));  
	228: model.addAttribute("msg", map.get("msg"));  
	230: model.addAttribute("result", "fail");  
	231: model.addAttribute("msg", "Authentication failed.");  
	248: model.addAttribute("result", map.get("result"));  
	249: model.addAttribute("msg", map.get("msg"));  
	251: model.addAttribute("result", "fail");  
	252: model.addAttribute("msg", "Authentication failed.");  
	269: model.addAttribute("result", map.get("result"));  
	270: model.addAttribute("msg", map.get("msg"));  
	272: model.addAttribute("result", "fail");  
	273: model.addAttribute("msg", "Authentication failed."); 


ApplicationController.java (23 matches)
	49: model.addAttribute("applicationSeq", paramMap.get("applicationSeq"));  
	68: model.addAttribute("detailImage", mdcUrl+mdcArea+detailImage+"/");  
	69: model.addAttribute("uploadImage", mdcUrl+mdcArea+uploadImage+"/");  
	82: model.addAttribute("applicationMap", applicationMap);  
	88: model.addAttribute("screenShots", screenShots);  
	92: model.addAttribute("manual", manual);  
	93: model.addAttribute("applicationSeq", applicationMap.get("applicationSeq").toString());  
	110: model.addAttribute("flag", "success");  
	111: model.addAttribute("msg", "Request success");  
	114: model.addAttribute("flag", "fail");  
	115: model.addAttribute("msg", "Failed to request");  
	125: model.addAttribute("detailImage", mdcUrl+mdcArea+detailImage+"/");  
	126: model.addAttribute("uploadImage", mdcUrl+mdcArea+uploadImage+"/");  
	136: model.addAttribute("detailImage", mdcUrl+mdcArea+detailImage+"/");  
	137: model.addAttribute("uploadImage", mdcUrl+mdcArea+uploadImage+"/");  
	147: model.addAttribute("detailImage", mdcUrl+mdcArea+detailImage+"/");  
	148: model.addAttribute("uploadImage", mdcUrl+mdcArea+uploadImage+"/");  
	165: model.addAttribute("detailImage", mdcUrl+mdcArea+detailImage+"/");  
	166: model.addAttribute("uploadImage", mdcUrl+mdcArea+uploadImage+"/");  
	183: model.addAttribute("detailImage", mdcUrl+mdcArea+detailImage+"/");  
	184: model.addAttribute("uploadImage", mdcUrl+mdcArea+uploadImage+"/");  
	194: model.addAttribute("detailImage", mdcUrl+mdcArea+detailImage+"/");  
	195: model.addAttribute("uploadImage", mdcUrl+mdcArea+uploadImage+"/");  

ApprovalManagementController.java (22 matches)
	51: model.addAttribute("cbProductNameOptions", commonService.getComboCode(cbParamMap));  
	63: model.addAttribute("kdcApprovalList", map.get("kdcApprovalList"));  
	64: model.addAttribute("pageInfo", map.get("pageInfo"));  
	98: model.addAttribute("flag", "success");  
	99: model.addAttribute("msg", "Approval succeeded.");  
	124: model.addAttribute("activated", "Y");  
	126: model.addAttribute("activated", "N");  
	147: model.addAttribute("flag", "fail");  
	148: model.addAttribute("msg", "Approval failed.");  
	156: model.addAttribute("kdcPhoto", kdcService.getKDCPhoto(paramMap));  
	157: model.addAttribute("flag", "success");  
	169: model.addAttribute("cbApprovalFlagOptions", commonService.getComboCode(cbParamMap));  
	182: model.addAttribute("applicationApprovalList", map.get("applicationApprovalList"));  
	183: model.addAttribute("pageInfo", map.get("pageInfo"));  
	210: model.addAttribute("flag", "success");  
	211: model.addAttribute("msg", "Approval succeeded. ");  
	214: model.addAttribute("flag", "fail");  
	215: model.addAttribute("msg", "Approval failed.");  
	226: model.addAttribute("ownerMap", userManagementService.getUserInfo(paramMap));  
	227: model.addAttribute("flag", "success");  
	230: model.addAttribute("flag", "fail");  
	231: model.addAttribute("msg", "System error occured.");  
	
BoardController.java (9 matches)
	64: model.addAttribute("flag", "success");  
	65: model.addAttribute("msg", "Mail sent successfully.");  
	67: model.addAttribute("flag", "fail");  
	68: model.addAttribute("msg", "Failed to send mail.");  
	90: model.addAttribute("faqList", map.get("faqList"));  
	91: model.addAttribute("pageInfo", map.get("pageInfo"));  
	111: model.addAttribute("noticeList", map.get("noticeList"));  
	112: model.addAttribute("pageInfo", map.get("pageInfo"));  
	122: model.addAttribute("noticeDetailMap", boardService.getNoticeDetailForUser(paramMap));  

BoardManagementController.java (23 matches)
	49: model.addAttribute("boardList", map.get("boardList"));  
	50: model.addAttribute("pageInfo", map.get("pageInfo"));  
	67: model.addAttribute("msg", "Saved succesfully!");  
	68: model.addAttribute("flag", "success");  
	71: model.addAttribute("msg", "Failed to save.");  
	72: model.addAttribute("flag", "fail");  
	85: model.addAttribute("msg", "Saved succesfully!");  
	86: model.addAttribute("flag", "success");  
	89: model.addAttribute("msg", "Failed to save.");  
	90: model.addAttribute("flag", "fail");  
	99: model.addAttribute("boardMap", boardManagementService.getBoard(paramMap));  
	108: model.addAttribute("msg", "Succesfully deleted.");  
	109: model.addAttribute("flag", "success");  
	112: model.addAttribute("msg", "Failed to delete.");  
	113: model.addAttribute("flag", "fail");  
	135: model.addAttribute("faqList", map.get("faqList"));  
	136: model.addAttribute("pageInfo", map.get("pageInfo"));  
	157: model.addAttribute("qnaList", map.get("qnaList"));  
	158: model.addAttribute("pageInfo", map.get("pageInfo"));  
	186: model.addAttribute("flag", "success");  
	187: model.addAttribute("msg", "Mail sent successfully.");  
	189: model.addAttribute("flag", "fail");  
	190: model.addAttribute("msg", "Failed to send mail.");  

DashboardController.java (3 matches)
	33: model.addAttribute("usersMap", dashboardService.getNumberOfUsers());  
	34: model.addAttribute("groupsMap", dashboardService.getNumberOfGroups());  
	35: model.addAttribute("kdcMap", dashboardService.getNumberOfKDC());  

GroupController.java (51 matches)
	80: model.addAttribute("approvalCnt", approvalCnt);  
	81: model.addAttribute("groupInfoList", groupInfoList);  
	104: model.addAttribute("flag", "success");  
	105: model.addAttribute("groupInfoList", groupService.getGroupInfo(paramMap));  
	108: model.addAttribute("flag", "fail");  
	111: model.addAttribute("flag", "exist");  
	114: model.addAttribute("flag", "fail");  
	204: model.addAttribute("flag", map.get("flag"));  
	205: model.addAttribute("msg", map.get("msg"));  
	207: model.addAttribute("flag", "fail");  
	208: model.addAttribute("msg", "Owner's country info is required.");  
	211: model.addAttribute("flag", "fail");  
	212: model.addAttribute("msg", "Authentication failed.");  
	229: model.addAttribute("memberList", map.get("memberList"));  
	230: model.addAttribute("pageInfo", map.get("pageInfo"));  
	232: model.addAttribute("memberLimit", kdcService.getApprovalCount(paramMap));  
	233: model.addAttribute("memberCnt", groupService.getGroupMemberCount(paramMap));  
	330: model.addAttribute("flag", "success");  
	358: model.addAttribute("flag", "success");  
	359: model.addAttribute("msg", sbMsg.toString());  
	365: model.addAttribute("flag", "fail");  
	366: model.addAttribute("msg", sbMsg.toString());  
	369: model.addAttribute("flag", "fail");  
	370: model.addAttribute("msg", "There is no data to add.");  
	374: model.addAttribute("flag", "fail");  
	375: model.addAttribute("msg", "System error.");  
	378: model.addAttribute("flag", "fail");  
	379: model.addAttribute("msg", "Owner's country info is required.");  
	382: model.addAttribute("flag", "fail");  
	383: model.addAttribute("msg", "Authentication failed.");  
	403: model.addAttribute("flag", "success");  
	404: model.addAttribute("msg", "Group creation successful");  
	405: //model.addAttribute("groupInfoList", groupService.getGroupInfo(paramMap));  
	408: model.addAttribute("flag", "fail");  
	409: model.addAttribute("msg", "Group creation failed");  
	412: model.addAttribute("flag", "exist");  
	413: model.addAttribute("msg", "Group Duplicate Error");  
	416: model.addAttribute("flag", "fail");  
	417: model.addAttribute("msg", "Permission error");  
	431: model.addAttribute("flag", "success");  
	432: model.addAttribute("msg", "Group update successful");  
	435: model.addAttribute("flag", "fail");  
	436: model.addAttribute("msg", "Group update failed");  
	439: model.addAttribute("flag", "fail");  
	440: model.addAttribute("msg", "Permission error");  
	456: model.addAttribute("flag", "success");  
	457: model.addAttribute("msg", "Group update successful");  
	460: model.addAttribute("flag", "fail");  
	461: model.addAttribute("msg", "Group update failed");  
	464: model.addAttribute("flag", "fail");  
	465: model.addAttribute("msg", "Permission error");  
	
KDCController.java (44 matches)
	56: model.addAttribute("flag", "fail");  
	57: model.addAttribute("redirectMsg", "Abnormal access.");  
	63: model.addAttribute("flag", "fail");  
	64: model.addAttribute("redirectMsg", "Abnormal access.");  
	69: model.addAttribute("cbProductNameOptions", commonService.getComboCode(cbParamMap));  
	70: model.addAttribute("flag", "success");  
	71: model.addAttribute("userId", userId);  
	72: model.addAttribute("email", "email");  
	90: model.addAttribute("auth", "Y");  
	93: model.addAttribute("cbProductNameOptions", commonService.getComboCode(cbParamMap));  
	96: model.addAttribute("auth", "N");  
	97: model.addAttribute("redirectMsg", "Authentication failed. You don't have permission for KDC Registration.");  
	111: model.addAttribute("flag", "fail");  
	112: model.addAttribute("msg", "Abnormal access.");  
	117: model.addAttribute("flag", "fail");  
	118: model.addAttribute("msg", "Abnormal access.");  
	123: model.addAttribute("kdcList", map.get("kdcList"));  
	124: model.addAttribute("pageInfo", map.get("pageInfo"));  
	125: model.addAttribute("flag", "success");  
	137: model.addAttribute("flag", "fail");  
	138: model.addAttribute("msg", "Abnormal access.");  
	143: model.addAttribute("flag", "fail");  
	144: model.addAttribute("msg", "Abnormal access.");  
	155: model.addAttribute("flag", "success");  
	156: model.addAttribute("msg", "Successfully registered.");  
	169: model.addAttribute("flag", "fail");  
	170: model.addAttribute("msg", "Failed to upload file.");  
	173: model.addAttribute("flag", "fail");  
	174: model.addAttribute("msg", "This serial number is already registered.");  
	177: model.addAttribute("flag", "fail");  
	178: model.addAttribute("msg", "There is no serial number.");  
	191: model.addAttribute("flag", "fail");  
	192: model.addAttribute("msg", "Abnormal access.");  
	196: model.addAttribute("flag", "fail");  
	197: model.addAttribute("msg", "Abnormal access.");  
	199: model.addAttribute("flag", "success");  
	200: model.addAttribute("kdcPhoto", kdcService.getKDCPhoto(paramMap));  
	218: model.addAttribute("flag", "fail");  
	219: model.addAttribute("msg", "Abnormal access.");  
	224: model.addAttribute("flag", "fail");  
	225: model.addAttribute("msg", "Abnormal access.");  
	230: model.addAttribute("msg", map.get("msg"));  
	232: model.addAttribute("flag", "success");  
	249: model.addAttribute("flag", "fail"); 
	 
MainController.java
	39: model.addAttribute("applicationList", mainService.getApplicationListWithFiles(paramMap));  

SignController.java (41 matches)
	61: model.addAttribute("listCountryCode", commonService.getComboCountry(""));  
	71: model.addAttribute("publicKeyModulus", rsa.getPublicKeyModulus());  
	72: model.addAttribute("publicKeyExponent", rsa.getPublicKeyExponent());  
	121: model.addAttribute("LoginFlag", loginFlag);  
	122: model.addAttribute("Msg", strMsg);  
	123: model.addAttribute("userType", userType);  
	124: model.addAttribute("initialPwdYn", initialPwdYn);  
	133: model.addAttribute("listCountryCode", commonService.getComboCountry(""));  
	137: model.addAttribute("publicKeyModulus", rsa.getPublicKeyModulus());  
	138: model.addAttribute("publicKeyExponent", rsa.getPublicKeyExponent());  
	150: model.addAttribute("isExist", isExist);  
	169: model.addAttribute("result", result);  
	192: model.addAttribute("result", result);  
	210: model.addAttribute("result", result);  
	230: model.addAttribute("infoMap", infoMap);  
	232: model.addAttribute("listCountryCode", commonService.getComboCountry(CommonUtils.getValue(infoMap.get("country"))));  
	238: model.addAttribute("publicKeyModulus", rsa.getPublicKeyModulus());  
	239: model.addAttribute("publicKeyExponent", rsa.getPublicKeyExponent());  
	266: model.addAttribute("flag", "success");  
	267: model.addAttribute("msg", "We sent the changed password to your email.");  
	270: model.addAttribute("flag", "success");  
	271: model.addAttribute("msg", "We changed your password but failed to send an email.");  
	275: model.addAttribute("flag", "fail");  
	276: model.addAttribute("msg", "Reset password failed.");  
	279: model.addAttribute("flag", "fail");  
	280: model.addAttribute("msg", "Reset password failed.");  
	306: model.addAttribute("flag", "success");  
	307: model.addAttribute("msg", "Password successfully changed.");  
	310: model.addAttribute("flag", "fail");  
	311: model.addAttribute("msg", "Failed to change password.");  
	314: model.addAttribute("flag", "fail");  
	315: model.addAttribute("msg", "Invalid access.");  
	318: model.addAttribute("flag", "fail");  
	319: model.addAttribute("msg", "Invalid access.");  
	323: model.addAttribute("flag", "fail");  
	324: model.addAttribute("msg", "Failed to change password.");  
	347: model.addAttribute("continent", map.get("continent"));  
	358: model.addAttribute("flag", "success");  
	360: model.addAttribute("flag", "fail");  
	393: model.addAttribute("msg", "Your account will be delivered by email in 2~3 business days.");  
	396: model.addAttribute("msg", "Fail");  
	
SystemManagementController.java (97 matches)
	71: model.addAttribute("tblMenuList", menuList);  
	84: //model.addAttribute("menuList", systemManagementService. getMenuList(paramMap));  
	85: model.addAttribute("flag", "success");  
	86: model.addAttribute("msg", "Save succesful!");  
	89: model.addAttribute("flag", "fail");  
	90: model.addAttribute("msg", "Failed to save");  
	102: model.addAttribute("flag", "success");  
	103: model.addAttribute("msg", "Save succesful!");  
	106: model.addAttribute("flag", "fail");  
	107: model.addAttribute("msg", "Failed to save");  
	116: model.addAttribute("menuInfoMap", systemManagementService.getMenuInfo(paramMap));  
	134: model.addAttribute("flag", "success");  
	135: model.addAttribute("msg", "Save succesful!");  
	138: model.addAttribute("flag", "fail");  
	139: model.addAttribute("msg", "Failed to save");  
	149: model.addAttribute("flag", "success");  
	150: model.addAttribute("msg", "Save succesful!");  
	153: model.addAttribute("flag", "fail");  
	154: model.addAttribute("msg", "Failed to save");  
	166: model.addAttribute("roleList", map.get("roleList"));  
	167: model.addAttribute("pageInfo", map.get("pageInfo"));  
	179: model.addAttribute("roleUserList", map.get("roleUserList"));  
	180: model.addAttribute("pageInfo", map.get("pageInfo"));  
	188: model.addAttribute("userList", systemManagementService.getUserList(paramMap));  
	197: model.addAttribute("flag", "success");  
	198: model.addAttribute("msg", "Save succesful!");  
	201: model.addAttribute("flag", "fail");  
	202: model.addAttribute("msg", "Failed to save");  
	212: model.addAttribute("flag", "success");  
	213: model.addAttribute("msg", "Removal succeded.");  
	216: model.addAttribute("flag", "fail");  
	217: model.addAttribute("msg", "Failed to remove");  
	230: model.addAttribute("menuList", menuList);  
	242: model.addAttribute("tblMenuList", menuList);  
	252: model.addAttribute("flag", "success");  
	253: model.addAttribute("msg", "Save succesful!");  
	256: model.addAttribute("flag", "fail");  
	257: model.addAttribute("msg", "Failed to save");  
	267: model.addAttribute("flag", "success");  
	268: model.addAttribute("msg", "Removal succeded.");  
	271: model.addAttribute("flag", "fail");  
	272: model.addAttribute("msg", "Failed to remove.");  
	292: model.addAttribute("codeMasterList", map.get("codeMasterList"));  
	293: model.addAttribute("pageInfo", map.get("pageInfo"));  
	303: model.addAttribute("codeDetailList", map.get("codeDetailList"));  
	304: model.addAttribute("pageInfo", map.get("pageInfo"));  
	311: model.addAttribute("flag", systemManagementService.checkCodeMasterDuplication(paramMap));  
	320: model.addAttribute("flag", "success");  
	321: model.addAttribute("msg", "Save succesful!");  
	324: model.addAttribute("flag", "fail");  
	325: model.addAttribute("msg", "Failed to save");  
	335: model.addAttribute("flag", "success");  
	336: model.addAttribute("msg", "Save succesful!");  
	339: model.addAttribute("flag", "fail");  
	340: model.addAttribute("msg", "Failed to save");  
	350: model.addAttribute("flag", "success");  
	351: model.addAttribute("msg", "Save succesful!");  
	354: model.addAttribute("flag", "fail");  
	355: model.addAttribute("msg", "Failed to save");  
	365: model.addAttribute("flag", "success");  
	366: model.addAttribute("msg", "Save succesful!");  
	369: model.addAttribute("flag", "fail");  
	370: model.addAttribute("msg", "Failed to save");  
	383: model.addAttribute("cbFileTypeOptions", commonService.getComboCode(cbParamMap));  
	386: model.addAttribute("cbFileUsageOptions", commonService.getComboCode(cbParamMap));  
	398: model.addAttribute("applicationList", map.get("applicationList"));  
	399: model.addAttribute("pageInfo", map.get("pageInfo"));  
	407: model.addAttribute("applicationInfo", systemManagementService.getApplicationInfo(paramMap));  
	416: model.addAttribute("flag", "success");  
	417: model.addAttribute("msg", "Save succesful!");  
	420: model.addAttribute("flag", "fail");  
	421: model.addAttribute("msg", "Failed to save");  
	431: model.addAttribute("flag", "success");  
	432: model.addAttribute("msg", "Save succesful!");  
	435: model.addAttribute("flag", "fail");  
	436: model.addAttribute("msg", "Failed to save");  
	450: model.addAttribute("flag", "success");  
	451: model.addAttribute("msg", "Save succesful!");  
	453: model.addAttribute("flag", "fail");  
	454: model.addAttribute("msg", "Failed to save");  
	468: model.addAttribute("flag", "success");  
	469: model.addAttribute("msg", "Save succesful!");  
	471: model.addAttribute("flag", "fail");  
	472: model.addAttribute("msg", "Failed to save");  
	482: model.addAttribute("flag", "success");  
	483: model.addAttribute("msg", "Save succesful!");  
	486: model.addAttribute("flag", "fail");  
	487: model.addAttribute("msg", "Failed to save");  
	499: model.addAttribute("fileList", map.get("fileList"));  
	500: model.addAttribute("pageInfo", map.get("pageInfo"));  
	508: model.addAttribute("fileInfo", systemManagementService.getFileInfo(paramMap));  
	519: model.addAttribute("flag", "success");  
	520: model.addAttribute("msg", "Delete succeded.");  
	522: model.addAttribute("flag", "fail");  
	523: model.addAttribute("msg", "Failed to delete.");  
	527: model.addAttribute("flag", "fail");  
	528: model.addAttribute("msg", "Failed to delete.");  
	
TestController.java
	48: model.addAttribute("msg", "End of time test.");  
	
UserManagementController.java (68 matches)
	78: model.addAttribute("ownerList", map.get("list"));  
	79: model.addAttribute("pageInfo", map.get("pageInfo"));  
	100: model.addAttribute("userInfoList", map.get("userInfoList"));  
	101: model.addAttribute("pageInfo", map.get("pageInfo"));  
	111: model.addAttribute("flag", "success");  
	112: model.addAttribute("msg", "User information succesfully updated!");  
	115: model.addAttribute("flag", "fail");  
	116: model.addAttribute("msg", "Failed to update user information.");  
	127: model.addAttribute("listCountryCode", commonService.getComboCountry(""));  
	138: model.addAttribute("adminInfoList", map.get("adminInfoList"));  
	139: model.addAttribute("pageInfo", map.get("pageInfo"));  
	151: model.addAttribute("flag", "success");  
	152: model.addAttribute("msg", "User information succesfully saved!");  
	155: model.addAttribute("flag", "fail");  
	156: model.addAttribute("msg", "Failed to save user information.");  
	166: model.addAttribute("flag", "success");  
	167: model.addAttribute("msg", "User information succesfully updated!");  
	170: model.addAttribute("flag", "fail");  
	171: model.addAttribute("msg", "Failed to update user information.");  
	183: model.addAttribute("groupList", map.get("groupList"));  
	184: model.addAttribute("pageInfo", map.get("pageInfo"));  
	196: model.addAttribute("memberList", map.get("memberList"));  
	197: model.addAttribute("pageInfo", map.get("pageInfo"));  
	207: model.addAttribute("flag", "success");  
	208: model.addAttribute("msg", "User information succesfully updated!");  
	211: model.addAttribute("flag", "fail");  
	212: model.addAttribute("msg", "Failed to update user information.");  
	300: model.addAttribute("flag", "success");  
	301: model.addAttribute("msg", "Sending mail successfully.");  
	304: model.addAttribute("flag", "fail");  
	305: model.addAttribute("msg", "Failed to send mail.");  
	358: model.addAttribute("msg", sbResult.toString());  
	368: model.addAttribute("flag", "success");  
	369: model.addAttribute("msg", "Sending mail successfully.");  
	371: model.addAttribute("flag", "fail");  
	372: model.addAttribute("msg", "Failed to send mail.");  
	441: model.addAttribute("demoAccountsList", map.get("demoAccountsList"));  
	442: model.addAttribute("pageInfo", map.get("pageInfo"));  
	443: model.addAttribute("demoAccount", userManagementService.getDemoAccount(paramMap));  
	454: model.addAttribute("msg", "Success");  
	457: model.addAttribute("msg", "Fail");  
	504: model.addAttribute("flag", "success");  
	505: model.addAttribute("msg", "Sending mail successfully.");  
	508: model.addAttribute("flag", "fail");  
	509: model.addAttribute("msg", "Failed to send mail.");  
	548: model.addAttribute("flag", "success");  
	549: model.addAttribute("msg", "Mobile user creation is complete.");  
	551: model.addAttribute("flag", "fail");  
	552: model.addAttribute("msg", "Mobile user creation is complete but failed to send mail.");  
	555: model.addAttribute("flag", "fail");  
	556: model.addAttribute("msg", "Failed to create mobile user. There is an error to create mobile user.");  
	559: model.addAttribute("flag", "fail");  
	560: model.addAttribute("msg", "Failed to create mobile user. There is a difference between Services DB and MDC DB.");  
	564: model.addAttribute("flag", "fail");  
	565: model.addAttribute("msg", "Failed to create mobile user.");  
	621: model.addAttribute("flag", "success");  
	622: model.addAttribute("msg", "Mobile user creation is complete.");  
	624: model.addAttribute("flag", "fail");  
	625: model.addAttribute("msg", "Mobile user creation is complete but failed to send mail.");  
	628: model.addAttribute("flag", "fail");  
	629: model.addAttribute("msg", "Failed to create mobile user. There is an error to create mobile user.");  
	633: model.addAttribute("flag", "fail");  
	634: model.addAttribute("msg", "Failed to create mobile user.");  
	647: model.addAttribute("batchUserList", map.get("batchUserList"));  
	648: model.addAttribute("pageInfo", map.get("pageInfo"));  
	663: model.addAttribute("msg", map.get("msg"));  
	665: model.addAttribute("flag", "success");  
	667: model.addAttribute("flag", "fail");  
