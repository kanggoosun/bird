<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aisolution.koamtacon.mapper.service.BoardManagementMapper">
    <select id="getBoardListCount" parameterType="HashMap" resultType="int">
    <![CDATA[
        select count(0) as cnt
          from tb_board brd
               left join tb_user usr on usr.user_id = brd.writer_id
         where 1=1
           and brd.board_type = #{boardType}
    ]]>
    <if test="sKeyword != null and sKeyword != ''">
    <![CDATA[
           and (brd.title like concat('%',#{sKeyword},'%')
               or brd.contents like concat('%',#{sKeyword},'%')
               )
    ]]>
    </if>
    <if test="sFromDate != null and sFromDate != ''">
        <choose>
            <when test="sToDate != null and sToDate != ''">
    <![CDATA[
           and (DATE_FORMAT(#{sFromDate}, '%Y%m%d') between DATE_FORMAT(brd.posting_start_date, '%Y%m%d') and DATE_FORMAT(brd.posting_end_date, '%Y%m%d')
               or DATE_FORMAT(#{sToDate}, '%Y%m%d') between DATE_FORMAT(brd.posting_start_date, '%Y%m%d') and DATE_FORMAT(brd.posting_end_date, '%Y%m%d')
               )
    ]]>
            </when>
            <otherwise>
    <![CDATA[
           and DATE_FORMAT(#{sFromDate}, '%Y%m%d') between DATE_FORMAT(brd.posting_start_date, '%Y%m%d') and DATE_FORMAT(brd.posting_end_date, '%Y%m%d')
    ]]>
            </otherwise>
        </choose>
    </if>
    </select>
    
    <select id="getBoardList" parameterType="HashMap" resultType="HashMap">
    <![CDATA[
        select brd.board_seq as boardSeq
             , brd.board_type as boardType
             , brd.parent_seq as parentSeq
             , brd.writer_id as writerId
             , usr.name as writerName
             , brd.class_seq as classSeq
             , brd.title as boardTitle
             , brd.contents as boardContents
             , DATE_FORMAT(brd.answer_date, '%Y-%m-%d %H:%i:%s') as answerDate
             , DATE_FORMAT(brd.posting_start_date, '%Y-%m-%d %H:%i:%s') as postingStartDate
             , DATE_FORMAT(brd.posting_end_date, '%Y-%m-%d %H:%i:%s') as postingEndDate
             , DATE_FORMAT(brd.created_date, '%Y-%m-%d %H:%i:%s') as writtenDate
             , DATE_FORMAT(brd.updated_date, '%Y-%m-%d %H:%i:%s') as lastEditedDate
          from tb_board brd
               left join tb_user usr on usr.user_id = brd.writer_id
         where 1=1
           and brd.board_type = #{boardType}
    ]]>
    <if test="sKeyword != null and sKeyword != ''">
    <![CDATA[
           and (brd.title like concat('%',#{sKeyword},'%')
               or brd.contents like concat('%',#{sKeyword},'%')
               )
    ]]>
    </if>
    <if test="sFromDate != null and sFromDate != ''">
        <choose>
            <when test="sToDate != null and sToDate != ''">
    <![CDATA[
           and (DATE_FORMAT(#{sFromDate}, '%Y%m%d') between DATE_FORMAT(brd.posting_start_date, '%Y%m%d') and DATE_FORMAT(brd.posting_end_date, '%Y%m%d')
               or DATE_FORMAT(#{sToDate}, '%Y%m%d') between DATE_FORMAT(brd.posting_start_date, '%Y%m%d') and DATE_FORMAT(brd.posting_end_date, '%Y%m%d')
               or DATE_FORMAT(brd.posting_start_date, '%Y%m%d') between DATE_FORMAT(#{sFromDate}, '%Y%m%d') and DATE_FORMAT(#{sToDate}, '%Y%m%d')
               or DATE_FORMAT(brd.posting_end_date, '%Y%m%d') between DATE_FORMAT(#{sFromDate}, '%Y%m%d') and DATE_FORMAT(#{sToDate}, '%Y%m%d')
               )
    ]]>
            </when>
            <otherwise>
    <![CDATA[
           and DATE_FORMAT(#{sFromDate}, '%Y%m%d') between DATE_FORMAT(brd.posting_start_date, '%Y%m%d') and DATE_FORMAT(brd.posting_end_date, '%Y%m%d')
    ]]>
            </otherwise>
        </choose>
    </if>
    <![CDATA[
         order by IFNULL(brd.updated_date, brd.created_date) desc
         limit #{itemNoPerPage} offset #{offset}
    ]]>
    </select>
    
    <select id="getMaxBoardSeq" parameterType="HashMap" resultType="int">
    <![CDATA[
        select IFNULL(MAX(board_seq)+1, 0) as maxBoradSeq
          from tb_board
         where 1=1
    ]]>
    </select>
    
    <insert id="insertBoard" parameterType="HashMap">
    <![CDATA[
        insert into tb_board (
               board_seq          , board_type       , parent_seq     , writer_id
             , class_seq          , title            , contents       , answer_date
             , posting_start_date , posting_end_date
             , created_date, updated_date
        ) values (
               #{boardSeq}        , #{boardType}     , #{parentSeq}    , #{writerId}
             , #{classSeq}        , #{boardTitle}    , #{boardContents}, #{answerDate}
             , #{postingStartDate}, #{postingEndDate}
             , CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP()
        )
    ]]>
    </insert>
    
    <update id="updateBoard" parameterType="HashMap">
    <![CDATA[
        update tb_board
           set class_seq = #{classSeq}
             , writer_id = #{writerId}
             , title = #{boardTitle}
             , contents = #{boardContents}
             , answer_date = #{answerDate}
             , posting_start_date = #{postingStartDate}
             , posting_end_date = #{postingEndDate}
             , updated_date = CURRENT_TIMESTAMP()
         where 1=1
           and board_seq = #{boardSeq}
    ]]>
    </update>
    
    <select id="getBoard" parameterType="HashMap" resultType="HashMap">
    <![CDATA[
        select brd.board_seq as boardSeq
             , brd.board_type as boardType
             , brd.parent_seq as parentSeq
             , brd.writer_id as writerId
             , usr.name as writerName
             , usr.email as writerMail
             , brd.class_seq as classSeq
             , brd.title as boardTitle
             , brd.contents as boardContents
             , DATE_FORMAT(brd.answer_date, '%Y-%m-%d %H:%i:%s') as answerDate
             , DATE_FORMAT(brd.posting_start_date, '%Y-%m-%d %H:%i:%s') as postingStartDate
             , DATE_FORMAT(brd.posting_end_date, '%Y-%m-%d %H:%i:%s') as postingEndDate
             , DATE_FORMAT(brd.created_date, '%Y-%m-%d %H:%i:%s') as writtenDate
             , DATE_FORMAT(brd.updated_date, '%Y-%m-%d %H:%i:%s') as lastEditedDate
          from tb_board brd
               left join tb_user usr on usr.user_id = brd.writer_id
         where 1=1
           and brd.board_seq = #{boardSeq}
    ]]>
    </select>
    
    <delete id="deleteBoard" parameterType="HashMap">
    <![CDATA[
        delete
          from tb_board
         where 1=1
           and board_seq = #{boardSeq}
    ]]>
    </delete>
    
    <select id="getFaqListCount" parameterType="HashMap" resultType="int">
    <![CDATA[
        select count(0) as cnt
          from tb_board q
               left join tb_user usr on usr.user_id = q.writer_id
               left outer join tb_board a on a.parent_seq = q.board_seq
         where 1=1
           and q.board_type = #{boardType}
           and q.parent_seq is null
    ]]>
    <if test="searchParam != null and searchParam != ''">
    <![CDATA[
          and (q.contents like CONCAT('%', #{searchParam}, '%') or a.contents like CONCAT('%', #{searchParam}, '%'))
    ]]>
    </if>
    </select>
    
    <select id="getFaqList" parameterType="HashMap" resultType="HashMap">
    <![CDATA[
        select q.parent_seq as qParentSeq
             , q.board_seq as qBoardSeq
             , q.board_type as qBoardType
             , q.writer_id as qWriterId
             , q.class_seq as qClassSeq
             , q.title as qBoardTitle
             , q.contents as qBoardContents
             , DATE_FORMAT(q.created_date, '%Y-%m-%d %H:%i:%s') as qWrittenDate
             , DATE_FORMAT(q.updated_date, '%Y-%m-%d %H:%i:%s') as qLastEditedDate
             , a.parent_seq as aParentSeq
             , a.board_seq as aBoardSeq
             , a.board_type as aBoardType
             , a.writer_id as aWriterId
             , a.class_seq as aClassSeq
             , a.title as aBoardTitle
             , a.contents as aBoardContents
             , DATE_FORMAT(a.created_date, '%Y-%m-%d %H:%i:%s') as aWrittenDate
             , DATE_FORMAT(a.updated_date, '%Y-%m-%d %H:%i:%s') as aLastEditedDate
          from tb_board q
               left join tb_user usr on usr.user_id = q.writer_id
               left outer join tb_board a on a.parent_seq = q.board_seq
         where 1=1
           and q.board_type = #{boardType}
           and q.parent_seq is null
    ]]>
    <if test="searchParam != null and searchParam != ''">
    <![CDATA[
          and (q.contents like CONCAT('%', #{searchParam}, '%') or a.contents like CONCAT('%', #{searchParam}, '%'))
    ]]>
    </if>
    <![CDATA[
         order by q.contents asc
         limit #{itemNoPerPage} offset #{offset}
    ]]>
    </select>
    
    <select id="getQnaListCount" parameterType="HashMap" resultType="int">
    <![CDATA[
        select count(0) as cnt
          from tb_board q
               left join tb_user qusr on qusr.user_id = q.writer_id
               left outer join tb_board a on a.parent_seq = q.board_seq
               left join tb_user ausr on ausr.user_id = a.writer_id
         where 1=1
           and q.board_type = #{boardType}
           and q.parent_seq is null
    ]]>
    </select>
    
    <select id="getQnaList" parameterType="HashMap" resultType="HashMap">
    <![CDATA[
        select q.parent_seq as qParentSeq
             , q.board_seq as qBoardSeq
             , q.board_type as qBoardType
             , q.writer_id as qWriterId
             , qusr.name as qWriterName
             , qusr.email as qWriterEmail
             , q.class_seq as qClassSeq
             , q.title as qBoardTitle
             , q.contents as qBoardContents
             , DATE_FORMAT(q.created_date, '%Y-%m-%d %H:%i:%s') as qWrittenDate
             , DATE_FORMAT(q.updated_date, '%Y-%m-%d %H:%i:%s') as qLastEditedDate
             , a.parent_seq as aParentSeq
             , a.board_seq as aBoardSeq
             , a.board_type as aBoardType
             , a.writer_id as aWriterId
             , ausr.name as aWriterName
             , a.class_seq as aClassSeq
             , a.title as aBoardTitle
             , a.contents as aBoardContents
             , DATE_FORMAT(a.created_date, '%Y-%m-%d %H:%i:%s') as aWrittenDate
             , DATE_FORMAT(a.updated_date, '%Y-%m-%d %H:%i:%s') as aLastEditedDate
          from tb_board q
               left join tb_user qusr on qusr.user_id = q.writer_id
               left outer join tb_board a on a.parent_seq = q.board_seq
               left join tb_user ausr on ausr.user_id = a.writer_id
         where 1=1
           and q.board_type = #{boardType}
           and q.parent_seq is null
         order by q.created_date desc, a.created_date desc
         limit #{itemNoPerPage} offset #{offset}
    ]]>
    </select>
    
    <update id="updateAnswerDate" parameterType="HashMap">
    <![CDATA[
        update tb_board
           set answer_date = CURRENT_TIMESTAMP()
         where 1=1
           and board_seq = #{parentSeq}
    ]]>
    </update>
</mapper>